{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\src\\\\components\\\\Modals\\\\VideoModal\\\\VideoModal.js\";\nimport React from 'react';\nimport './VideoModal.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-modal';\nimport { getSeasonsOrMovieLength } from 'utils/time';\nimport { faPlay, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'components/UI/Button/Button';\nimport useHoverStyleButton from 'hooks/useHoverStyleButton';\n\nif (process.env.NODE_ENV !== 'test') {\n  Modal.setAppElement('#root');\n} // Don't move this to css; it has to be here for the shouldCloseOnOverlay prop to work \n\n\nconst overlayStyle = {\n  overlay: {\n    backgroundColor: 'rgba(17,17,17,0.7)'\n  }\n};\n\nconst VideoModal = props => {\n  const videoDetailModal = props.videoDetailModal,\n        closeModalHandler = props.closeModalHandler,\n        videoInfo = props.videoInfo;\n\n  const _useHoverStyleButton = useHoverStyleButton({\n    'playButton': true,\n    'plusButton': true\n  }),\n        _useHoverStyleButton2 = _slicedToArray(_useHoverStyleButton, 2),\n        buttonHovered = _useHoverStyleButton2[0],\n        onButtonHoverHandler = _useHoverStyleButton2[1];\n\n  const vote_average = videoInfo.vote_average,\n        seasons = videoInfo.seasons,\n        runtime = videoInfo.runtime,\n        backdrop_path = videoInfo.backdrop_path,\n        poster_path = videoInfo.poster_path,\n        title = videoInfo.title,\n        name = videoInfo.name,\n        release_date = videoInfo.release_date,\n        first_air_date = videoInfo.first_air_date,\n        overview = videoInfo.overview;\n  const voteAverage = vote_average * 10;\n  const voteStyle = {\n    color: voteAverage > 49 ? '#46d369' : 'red'\n  };\n  const videoTime = getSeasonsOrMovieLength(seasons, runtime);\n  const styles = {\n    backgroundImage: \"url(https://image.tmdb.org/t/p/original/\".concat(backdrop_path || poster_path),\n    backgroundSize: 'cover'\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    className: \"ModalStyles\",\n    style: overlayStyle,\n    isOpen: videoDetailModal,\n    contentLabel: \"Modal is open\",\n    shouldCloseOnOverlayClick: true,\n    onRequestClose: closeModalHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"VideoDetailSection\",\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    onClick: closeModalHandler,\n    style: {\n      color: 'white',\n      float: 'right',\n      padding: '14px',\n      cursor: 'pointer'\n    },\n    size: \"2x\",\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shadowedSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, title || name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontalStyles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: voteStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Rating: \".concat(voteAverage, \"%\"), \" \\xA0\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, (release_date || first_air_date).substring(0, 4), \" \\xA0\"), videoTime), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, overview), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontalStyles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    backgroundColor: \"#fff\",\n    textColor: \"rgb(24, 24, 24)\",\n    playButton: true,\n    height: \"38px\",\n    width: \"138px\",\n    image: true,\n    icon: faPlay,\n    onButtonHover: () => onButtonHoverHandler('playButton'),\n    hoverStatus: buttonHovered['playButton'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(Button, {\n    backgroundColor: \"rgba(133, 133, 133, 0.6)\",\n    textColor: \"white\",\n    height: \"38px\",\n    width: \"138px\",\n    playButton: true,\n    image: true,\n    icon: faPlus,\n    onButtonHover: () => onButtonHoverHandler('plusButton'),\n    hoverStatus: buttonHovered['plusButton'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"My List\")))));\n};\n\nexport default React.memo(VideoModal);","map":{"version":3,"sources":["C:/Users/aftab/Desktop/netflixClone/Netflix-Clone/src/components/Modals/VideoModal/VideoModal.js"],"names":["React","FontAwesomeIcon","faTimes","Modal","getSeasonsOrMovieLength","faPlay","faPlus","Button","useHoverStyleButton","process","env","NODE_ENV","setAppElement","overlayStyle","overlay","backgroundColor","VideoModal","props","videoDetailModal","closeModalHandler","videoInfo","buttonHovered","onButtonHoverHandler","vote_average","seasons","runtime","backdrop_path","poster_path","title","name","release_date","first_air_date","overview","voteAverage","voteStyle","color","videoTime","styles","backgroundImage","backgroundSize","float","padding","cursor","substring","memo"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './VideoModal.css'\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal from 'react-modal'\r\nimport { getSeasonsOrMovieLength } from 'utils/time'\r\nimport { faPlay, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport Button from 'components/UI/Button/Button'\r\nimport useHoverStyleButton from 'hooks/useHoverStyleButton'\r\n\r\n\r\nif (process.env.NODE_ENV !== 'test') {\r\n    Modal.setAppElement('#root');\r\n}\r\n\r\n// Don't move this to css; it has to be here for the shouldCloseOnOverlay prop to work \r\nconst overlayStyle = {\r\n    overlay: {\r\n        backgroundColor: 'rgba(17,17,17,0.7)'\r\n    }\r\n}\r\n\r\nconst VideoModal = props => {\r\n    const { videoDetailModal, closeModalHandler, videoInfo } = props\r\n    const [buttonHovered, onButtonHoverHandler] = useHoverStyleButton({\r\n        'playButton': true,\r\n        'plusButton': true\r\n    })\r\n\r\n    const {\r\n        vote_average, seasons, runtime,\r\n        backdrop_path, poster_path, title, name,\r\n        release_date, first_air_date,\r\n        overview\r\n    } = videoInfo\r\n\r\n    const voteAverage = vote_average * 10\r\n    const voteStyle = { color: voteAverage > 49 ? '#46d369' : 'red' }\r\n    const videoTime = getSeasonsOrMovieLength(seasons, runtime)\r\n\r\n    const styles = {\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${backdrop_path || poster_path}`,\r\n        backgroundSize: 'cover'\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            className=\"ModalStyles\"\r\n            style={overlayStyle}\r\n            isOpen={videoDetailModal}\r\n            contentLabel=\"Modal is open\"\r\n            shouldCloseOnOverlayClick\r\n            onRequestClose={closeModalHandler}\r\n        >\r\n            <div className=\"VideoDetailSection\" style={styles}>\r\n                <FontAwesomeIcon onClick={closeModalHandler} style={{ color: 'white', float: 'right', padding: '14px', cursor: 'pointer' }}\r\n                    size=\"2x\"\r\n                    icon={faTimes}\r\n                />\r\n                <div className=\"shadowedSection\">\r\n                    <h1>{title || name}</h1>\r\n                    <div className=\"horizontalStyles\">\r\n                        <span style={voteStyle}>{`Rating: ${voteAverage}%`} &nbsp;</span>\r\n                        <span>{(release_date || first_air_date).substring(0, 4)} &nbsp;</span>\r\n                        {videoTime}\r\n                    </div>\r\n                    <div className=\"Overview\">{overview}</div>\r\n                    <div className=\"horizontalStyles\">\r\n                        <Button\r\n                            backgroundColor=\"#fff\"\r\n                            textColor=\"rgb(24, 24, 24)\"\r\n                            playButton\r\n                            height=\"38px\"\r\n                            width=\"138px\"\r\n                            image\r\n                            icon={faPlay}\r\n                            onButtonHover={() => onButtonHoverHandler('playButton')}\r\n                            hoverStatus={buttonHovered['playButton']}>\r\n                            Play\r\n                        </Button>\r\n\r\n                        <Button\r\n                            backgroundColor=\"rgba(133, 133, 133, 0.6)\"\r\n                            textColor=\"white\"\r\n                            height=\"38px\"\r\n                            width=\"138px\"\r\n                            playButton\r\n                            image\r\n                            icon={faPlus}\r\n                            onButtonHover={() => onButtonHoverHandler('plusButton')}\r\n                            hoverStatus={buttonHovered['plusButton']}>\r\n                            My List\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default React.memo(VideoModal)"]},"metadata":{},"sourceType":"module"}