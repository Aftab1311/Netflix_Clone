{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\src\\\\containers\\\\NavBar\\\\NavBar.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./NavBar.css\";\nimport { NetflixLogo } from \"assets/images/\";\nimport Button from \"components/UI/Button/Button\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGift, faBell } from \"@fortawesome/free-solid-svg-icons\";\nimport Search from '../Search/Search';\n\nconst NavBar = props => {\n  const navigation = props.navigation,\n        profileDropdown = props.profileDropdown,\n        navDropdown = props.navDropdown,\n        loginButton = props.loginButton;\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isNavbarAtTop = _useState2[0],\n        setIsNavbarAtTop = _useState2[1];\n\n  const scrollNavbarStateHandler = useCallback(() => {\n    const navbarAtTop = window.scrollY < 45;\n\n    if (navbarAtTop !== isNavbarAtTop) {\n      setIsNavbarAtTop(navbarAtTop);\n    }\n  }, [isNavbarAtTop]);\n  useEffect(() => {\n    document.addEventListener('scroll', scrollNavbarStateHandler);\n    return () => {\n      document.removeEventListener('scroll', scrollNavbarStateHandler);\n    };\n  }, [scrollNavbarStateHandler]);\n  let navTiles = null;\n  let flexStyle = {\n    justifyContent: 'space-between',\n    backgroundColor: !isNavbarAtTop && 'black'\n  };\n\n  if (navigation) {\n    navTiles = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LinkContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: \"inactive\",\n      activeClassName: \"active\",\n      to: \"/browse\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, \"Home\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"inactive\",\n      activeClassName: \"active\",\n      to: \"/browse/tv\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"TV Shows\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"inactive\",\n      activeClassName: \"active\",\n      to: \"/browse/movies\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Movies\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"inactive\",\n      activeClassName: \"active\",\n      to: \"/browse/latest\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Latest\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"inactive\",\n      activeClassName: \"active\",\n      to: \"/browse/list\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"My List\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, navDropdown)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"OptionsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ExtraOptions\",\n      style: {\n        fontWeight: '350'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"KIDS\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"ExtraOptions\",\n      size: \"lg\",\n      icon: faGift,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"ExtraOptions\",\n      size: \"lg\",\n      icon: faBell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), profileDropdown));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NavBar Sticky\",\n    style: flexStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: NetflixLogo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), navTiles, loginButton && /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    height: \"34px\",\n    width: \"75px\",\n    backgroundColor: \"#e50914\",\n    textColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Sign In\")));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/aftab/Desktop/netflixClone/Netflix-Clone/src/containers/NavBar/NavBar.js"],"names":["React","useState","useEffect","useCallback","NetflixLogo","Button","NavLink","Link","FontAwesomeIcon","faGift","faBell","Search","NavBar","props","navigation","profileDropdown","navDropdown","loginButton","isNavbarAtTop","setIsNavbarAtTop","scrollNavbarStateHandler","navbarAtTop","window","scrollY","document","addEventListener","removeEventListener","navTiles","flexStyle","justifyContent","backgroundColor","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nimport { NetflixLogo } from \"assets/images/\";\r\nimport Button from \"components/UI/Button/Button\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGift, faBell } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Search from '../Search/Search'\r\n\r\n\r\nconst NavBar = props => {\r\n  const { navigation, profileDropdown, navDropdown, loginButton } = props\r\n  const [isNavbarAtTop, setIsNavbarAtTop] = useState(true)\r\n\r\n  const scrollNavbarStateHandler = useCallback(() => {\r\n    const navbarAtTop = window.scrollY < 45\r\n    if (navbarAtTop !== isNavbarAtTop) {\r\n      setIsNavbarAtTop(navbarAtTop)\r\n    }\r\n  }, [isNavbarAtTop])\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', scrollNavbarStateHandler)\r\n    return () => {\r\n      document.removeEventListener('scroll', scrollNavbarStateHandler)\r\n    }\r\n  }, [scrollNavbarStateHandler])\r\n\r\n  let navTiles = null\r\n  let flexStyle = { justifyContent: 'space-between', backgroundColor: !isNavbarAtTop && 'black' }\r\n\r\n  if (navigation) {\r\n    navTiles = (\r\n      <>\r\n        <div className=\"LinkContainer\">\r\n          <div className=\"Horizontal\">\r\n            <NavLink className=\"inactive\" activeClassName=\"active\" to=\"/browse\" exact>Home</NavLink>\r\n            <NavLink className=\"inactive\" activeClassName=\"active\" to=\"/browse/tv\" exact>TV Shows</NavLink>\r\n            <NavLink className=\"inactive\" activeClassName=\"active\" to=\"/browse/movies\" exact>Movies</NavLink>\r\n            <NavLink className=\"inactive\" activeClassName=\"active\" to=\"/browse/latest\" exact>Latest</NavLink>\r\n            <NavLink className=\"inactive\" activeClassName=\"active\" to=\"/browse/list\" exact>My List</NavLink>\r\n          </div>\r\n          <div className=\"Vertical\">\r\n            {navDropdown}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"OptionsContainer\">\r\n          <Search />\r\n          <span className=\"ExtraOptions\" style={{ fontWeight: '350' }}>KIDS</span>\r\n          <FontAwesomeIcon className=\"ExtraOptions\" size=\"lg\" icon={faGift} />\r\n          <FontAwesomeIcon className=\"ExtraOptions\" size=\"lg\" icon={faBell} />\r\n          {profileDropdown}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"NavBar Sticky\" style={flexStyle}>\r\n      <img src={NetflixLogo} alt=\"Logo\" />\r\n      {navTiles}\r\n      {loginButton && <Link to=\"/login\">\r\n        <Button\r\n          height=\"34px\"\r\n          width=\"75px\"\r\n          backgroundColor=\"#e50914\"\r\n          textColor=\"#fff\"\r\n        >\r\n          Sign In\r\n      </Button>\r\n      </Link>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}