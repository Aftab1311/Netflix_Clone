{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\src\\\\containers\\\\Browse\\\\Browse.js\";\nimport React, { useState } from 'react';\nimport ProfileModal from 'components/Modals/ProfileModal/ProfileModal';\nimport { useHistory } from 'react-router-dom';\nimport Layout from 'hoc/Layout';\nimport SearchContent from './SearchContent/SearchContent';\nimport { Home, Movies, Tv, LatestVideo, List } from './routes';\n/**\r\n * Remember: the component where you want to use the context is the one which you wrap\r\n * with the provider.\r\n */\n\nconst Browse = props => {\n  // Render different videoSections based on this route prop\n  const route = props.route;\n  const initialState = localStorage.getItem('profileSelected') ? false : true;\n\n  const _useState = useState(initialState),\n        _useState2 = _slicedToArray(_useState, 2),\n        modal = _useState2[0],\n        setModal = _useState2[1];\n\n  const history = useHistory();\n\n  const profileClickHandler = () => {\n    setModal(false);\n    localStorage.setItem('profileSelected', true);\n  };\n\n  let browseContent;\n\n  if (route === '/browse') {\n    browseContent = /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    });\n  } else if (route === '/browse/movies') {\n    browseContent = /*#__PURE__*/React.createElement(Movies, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    });\n  } else if (route === '/browse/tv') {\n    browseContent = /*#__PURE__*/React.createElement(Tv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    });\n  } else if (route === '/browse/latest') {\n    browseContent = /*#__PURE__*/React.createElement(LatestVideo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    });\n  } else if (route === '/browse/list') {\n    browseContent = /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    });\n  } else if (route === '/search') {\n    browseContent = /*#__PURE__*/React.createElement(SearchContent, {\n      searchParam: history.location.search.substring(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProfileModal, {\n    modalOpen: modal,\n    profileClickHandler: profileClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), !modal && /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }\n  }, browseContent));\n};\n/**\r\n * Remember the thing which gave you trouble here. Never mutate state directly. Since I didn't create\r\n * a copy of the trending state array, I kept splicing each item all over the place, which \r\n * caused unnecessary problems. \r\n */\n\n\nexport default Browse;","map":{"version":3,"sources":["C:/Users/aftab/Desktop/netflixClone/Netflix-Clone/src/containers/Browse/Browse.js"],"names":["React","useState","ProfileModal","useHistory","Layout","SearchContent","Home","Movies","Tv","LatestVideo","List","Browse","props","route","initialState","localStorage","getItem","modal","setModal","history","profileClickHandler","setItem","browseContent","location","search","substring"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,EAAvB,EAA2BC,WAA3B,EAAwCC,IAAxC,QAAoD,UAApD;AAEA;;;;;AAIA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB;AADoB,QAEZC,KAFY,GAEFD,KAFE,CAEZC,KAFY;AAGpB,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0C,KAA1C,GAAkD,IAAvE;;AAHoB,oBAIMf,QAAQ,CAACa,YAAD,CAJd;AAAA;AAAA,QAIbG,KAJa;AAAA,QAINC,QAJM;;AAKpB,QAAMC,OAAO,GAAGhB,UAAU,EAA1B;;AAEA,QAAMiB,mBAAmB,GAAG,MAAM;AAC9BF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAH,IAAAA,YAAY,CAACM,OAAb,CAAqB,iBAArB,EAAwC,IAAxC;AACH,GAHD;;AAKA,MAAIC,aAAJ;;AACA,MAAIT,KAAK,KAAK,SAAd,EAAyB;AACrBS,IAAAA,aAAa,gBAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACH,GAFD,MAEO,IAAIT,KAAK,KAAK,gBAAd,EAAgC;AACnCS,IAAAA,aAAa,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACH,GAFM,MAEA,IAAIT,KAAK,KAAK,YAAd,EAA4B;AAC/BS,IAAAA,aAAa,gBAAG,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACH,GAFM,MAEA,IAAIT,KAAK,KAAK,gBAAd,EAAgC;AACnCS,IAAAA,aAAa,gBAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACH,GAFM,MAEA,IAAGT,KAAK,KAAK,cAAb,EAA6B;AAChCS,IAAAA,aAAa,gBAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACH,GAFM,MAGF,IAAIT,KAAK,KAAK,SAAd,EAAyB;AAC1BS,IAAAA,aAAa,gBAAG,oBAAC,aAAD;AAAe,MAAA,WAAW,EAAEH,OAAO,CAACI,QAAR,CAAiBC,MAAjB,CAAwBC,SAAxB,CAAkC,CAAlC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACH;;AAED,sBACI,uDACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAER,KAAzB;AAAgC,IAAA,mBAAmB,EAAEG,mBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEK,CAACH,KAAD,iBAAU,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACNK,aADM,CAFf,CADJ;AAQH,CApCD;AAsCA;;;;;;;AAMA,eAAeX,MAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport ProfileModal from 'components/Modals/ProfileModal/ProfileModal'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Layout from 'hoc/Layout'\r\nimport SearchContent from './SearchContent/SearchContent'\r\nimport { Home, Movies, Tv, LatestVideo, List } from './routes'\r\n\r\n/**\r\n * Remember: the component where you want to use the context is the one which you wrap\r\n * with the provider.\r\n */\r\nconst Browse = props => {\r\n    // Render different videoSections based on this route prop\r\n    const { route } = props\r\n    const initialState = localStorage.getItem('profileSelected') ? false : true\r\n    const [modal, setModal] = useState(initialState)\r\n    const history = useHistory()\r\n\r\n    const profileClickHandler = () => {\r\n        setModal(false)\r\n        localStorage.setItem('profileSelected', true)\r\n    }\r\n\r\n    let browseContent\r\n    if (route === '/browse') {\r\n        browseContent = <Home />\r\n    } else if (route === '/browse/movies') {\r\n        browseContent = <Movies />\r\n    } else if (route === '/browse/tv') {\r\n        browseContent = <Tv />\r\n    } else if (route === '/browse/latest') {\r\n        browseContent = <LatestVideo />\r\n    } else if(route === '/browse/list') {\r\n        browseContent = <List />\r\n    }\r\n    else if (route === '/search') {\r\n        browseContent = <SearchContent searchParam={history.location.search.substring(3)} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ProfileModal modalOpen={modal} profileClickHandler={profileClickHandler} />\r\n            {!modal && <Layout>\r\n                {browseContent}\r\n            </Layout>}\r\n        </>\r\n    )\r\n}\r\n\r\n/**\r\n * Remember the thing which gave you trouble here. Never mutate state directly. Since I didn't create\r\n * a copy of the trending state array, I kept splicing each item all over the place, which \r\n * caused unnecessary problems. \r\n */\r\n\r\nexport default Browse"]},"metadata":{},"sourceType":"module"}