{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport axios from 'baseAxios';\nexport const topratedAdapter = createEntityAdapter();\nexport const fetchTopRated = createAsyncThunk('topratedSlice/fetchTopRated', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, {\n    rejectWithValue\n  }) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.get(\"movie/top_rated?api_key=\".concat(process.env.REACT_APP_MOVIEDB_API_KEY, \"&language=en-US&page=1\"));\n\n        case 3:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.data.results);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n\n          if (_context.t0.response) {\n            _context.next = 11;\n            break;\n          }\n\n          throw _context.t0;\n\n        case 11:\n          return _context.abrupt(\"return\", rejectWithValue(_context.t0.response.data));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nconst topratedSlice = createSlice({\n  name: 'toprated',\n  initialState: topratedAdapter.getInitialState({\n    error: null\n  }),\n  extraReducers: {\n    [fetchTopRated.fulfilled]: (state, action) => {\n      topratedAdapter.upsertMany(state, action.payload);\n    },\n    [fetchTopRated.rejected]: (state, action) => {\n      if (action.payload) {\n        state.error = action.payload.status_message;\n      } else {\n        state.error = action.error;\n      }\n    }\n  }\n});\n\nconst _topratedAdapter$getS = topratedAdapter.getSelectors(state => state.toprated),\n      selectAllTopRatedVideos = _topratedAdapter$getS.selectAll;\n\nexport { selectAllTopRatedVideos };\nexport const selectTopRatedError = state => state.toprated.error;\nexport default topratedSlice.reducer;","map":{"version":3,"sources":["C:/Users/aftab/Desktop/netflixClone/Netflix-Clone/src/store/reducers/slices/topratedSlice.js"],"names":["createSlice","createAsyncThunk","createEntityAdapter","axios","topratedAdapter","fetchTopRated","_","rejectWithValue","get","process","env","REACT_APP_MOVIEDB_API_KEY","response","data","results","topratedSlice","name","initialState","getInitialState","error","extraReducers","fulfilled","state","action","upsertMany","payload","rejected","status_message","getSelectors","toprated","selectAllTopRatedVideos","selectAll","selectTopRatedError","reducer"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,mBAAxC,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,WAAlB;AAEA,OAAO,MAAMC,eAAe,GAAGF,mBAAmB,EAA3C;AAEP,OAAO,MAAMG,aAAa,GAAGJ,gBAAgB,CAAC,6BAAD;AAAA,sEACzC,iBAAOK,CAAP,EAAU;AAAEC,IAAAA;AAAF,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAE+BJ,KAAK,CAACK,GAAN,mCACQC,OAAO,CAACC,GAAR,CAAYC,yBADpB,4BAF/B;;AAAA;AAEcC,UAAAA,QAFd;AAAA,2CAKeA,QAAQ,CAACC,IAAT,CAAcC,OAL7B;;AAAA;AAAA;AAAA;;AAAA,cAOa,YAAMF,QAPnB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,2CAWeL,eAAe,CAAC,YAAMK,QAAN,CAAeC,IAAhB,CAX9B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADyC;;AAAA;AAAA;AAAA;AAAA,IAAtC;AAgBP,MAAME,aAAa,GAAGf,WAAW,CAAC;AAC9BgB,EAAAA,IAAI,EAAE,UADwB;AAE9BC,EAAAA,YAAY,EAAEb,eAAe,CAACc,eAAhB,CAAgC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAhC,CAFgB;AAG9BC,EAAAA,aAAa,EAAE;AACX,KAACf,aAAa,CAACgB,SAAf,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1CnB,MAAAA,eAAe,CAACoB,UAAhB,CAA2BF,KAA3B,EAAkCC,MAAM,CAACE,OAAzC;AACH,KAHU;AAKX,KAACpB,aAAa,CAACqB,QAAf,GAA0B,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAIA,MAAM,CAACE,OAAX,EAAoB;AAChBH,QAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACE,OAAP,CAAeE,cAA7B;AACH,OAFD,MAEO;AACHL,QAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACH;AAAS;AAVH;AAHe,CAAD,CAAjC;;8BAmBIf,eAAe,CAACwB,YAAhB,CAA6BN,KAAK,IAAIA,KAAK,CAACO,QAA5C,C;MADWC,uB,yBAAXC,S;;;AAGJ,OAAO,MAAMC,mBAAmB,GAAGV,KAAK,IAAIA,KAAK,CAACO,QAAN,CAAeV,KAApD;AAEP,eAAeJ,aAAa,CAACkB,OAA7B","sourcesContent":["import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit'\r\nimport axios from 'baseAxios'\r\n\r\nexport const topratedAdapter = createEntityAdapter()\r\n\r\nexport const fetchTopRated = createAsyncThunk('topratedSlice/fetchTopRated',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const response = await axios.get(\r\n                `movie/top_rated?api_key=${process.env.REACT_APP_MOVIEDB_API_KEY}&language=en-US&page=1`\r\n            )\r\n            return response.data.results\r\n        } catch (error) {\r\n            if (!error.response) {\r\n                throw error\r\n            }\r\n\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    })\r\n\r\nconst topratedSlice = createSlice({\r\n    name: 'toprated',\r\n    initialState: topratedAdapter.getInitialState({ error: null }),\r\n    extraReducers: {\r\n        [fetchTopRated.fulfilled]: (state, action) => {\r\n            topratedAdapter.upsertMany(state, action.payload)\r\n        },\r\n\r\n        [fetchTopRated.rejected]: (state, action) => {\r\n            if (action.payload) {\r\n                state.error = action.payload.status_message\r\n            } else {\r\n                state.error = action.error\r\n            }        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    selectAll: selectAllTopRatedVideos,\r\n} = topratedAdapter.getSelectors(state => state.toprated)\r\n\r\nexport const selectTopRatedError = state => state.toprated.error\r\n\r\nexport default topratedSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}