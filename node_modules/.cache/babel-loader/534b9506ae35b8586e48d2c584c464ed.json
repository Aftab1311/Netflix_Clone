{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\src\\\\utils\\\\time.js\";\nimport React from 'react';\n\nconst convertTimeToHourMinuteFormat = timeInHours => {\n  var hours = Math.trunc(timeInHours / 60);\n  var minutes = timeInHours % 60;\n  return \"\".concat(hours, \"h \").concat(minutes, \"m\");\n};\n\nexport const getSeasonsOrMovieLength = (seasons, runtime) => {\n  let timeSpan;\n\n  if (runtime) {\n    timeSpan = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }\n    }, convertTimeToHourMinuteFormat(runtime));\n  } else if (seasons) {\n    timeSpan = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, seasons.length > 1 ? \"\".concat(seasons.length, \" Seasons\") : \"\".concat(seasons.length, \" Season\"));\n  }\n\n  return timeSpan;\n};","map":{"version":3,"sources":["C:/Users/aftab/Desktop/netflixClone/Netflix-Clone/src/utils/time.js"],"names":["React","convertTimeToHourMinuteFormat","timeInHours","hours","Math","trunc","minutes","getSeasonsOrMovieLength","seasons","runtime","timeSpan","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,6BAA6B,GAAGC,WAAW,IAAI;AACjD,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,WAAW,GAAG,EAAzB,CAAZ;AACA,MAAII,OAAO,GAAGJ,WAAW,GAAG,EAA5B;AACA,mBAAUC,KAAV,eAAoBG,OAApB;AACH,CAJD;;AAMA,OAAO,MAAMC,uBAAuB,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACzD,MAAIC,QAAJ;;AACA,MAAID,OAAJ,EAAa;AACTC,IAAAA,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOT,6BAA6B,CAACQ,OAAD,CAApC,CAAX;AACH,GAFD,MAEO,IAAID,OAAJ,EAAa;AAChBE,IAAAA,QAAQ,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,OAAO,CAACG,MAAR,GAAiB,CAAjB,aAAwBH,OAAO,CAACG,MAAhC,0BAAsDH,OAAO,CAACG,MAA9D,YADL,CADJ;AAKH;;AAED,SAAOD,QAAP;AACH,CAbM","sourcesContent":["import React from 'react'\r\n\r\nconst convertTimeToHourMinuteFormat = timeInHours => {\r\n    var hours = Math.trunc(timeInHours / 60);\r\n    var minutes = timeInHours % 60;\r\n    return `${hours}h ${minutes}m`\r\n}\r\n\r\nexport const getSeasonsOrMovieLength = (seasons, runtime) => {\r\n    let timeSpan\r\n    if (runtime) {\r\n        timeSpan = <span>{convertTimeToHourMinuteFormat(runtime)}</span>\r\n    } else if (seasons) {\r\n        timeSpan = (\r\n            <span>\r\n                {seasons.length > 1 ? `${seasons.length} Seasons` : `${seasons.length} Season`}\r\n            </span>\r\n        )\r\n    }\r\n\r\n    return timeSpan\r\n}"]},"metadata":{},"sourceType":"module"}