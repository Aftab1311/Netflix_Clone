{"ast":null,"code":"import _toArray from \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\src\\\\containers\\\\Browse\\\\BrowseContent\\\\BrowseContent.js\";\nimport React, { useState } from 'react';\nimport './BrowseContent.css';\nimport TopTrailerComponent from 'components/Video/TopTrailerComponent/TopTrailerComponent';\nimport Button from 'components/UI/Button/Button';\nimport VideoCarousel from 'components/Video/VideoCarousel/VideoCarousel';\nimport { faPlay, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { buildVideoModal } from 'utils/transformations';\nimport useVideoInfoHandlers from 'hooks/useVideoInfoHandlers';\nimport ErrorPage from 'components/StaticPages/ErrorPage/ErrorPage';\nimport useHoverStyleButton from 'hooks/useHoverStyleButton';\nimport CircularSoundButton from 'components/UI/CircularSoundButton/CircularSoundButton';\n\nconst BrowseContent = props => {\n  const _useVideoInfoHandlers = useVideoInfoHandlers(),\n        _useVideoInfoHandlers2 = _slicedToArray(_useVideoInfoHandlers, 6),\n        videoInfo = _useVideoInfoHandlers2[0],\n        videoInfoError = _useVideoInfoHandlers2[1],\n        detailModal = _useVideoInfoHandlers2[2],\n        cardClickHandler = _useVideoInfoHandlers2[3],\n        cardHoverHandler = _useVideoInfoHandlers2[4],\n        closeModalHandler = _useVideoInfoHandlers2[5];\n\n  const _useHoverStyleButton = useHoverStyleButton({\n    'playButton': true,\n    'infoButton': true\n  }),\n        _useHoverStyleButton2 = _slicedToArray(_useHoverStyleButton, 2),\n        buttonHovered = _useHoverStyleButton2[0],\n        onButtonHoverHandler = _useHoverStyleButton2[1];\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        topTrailerSoundOn = _useState2[0],\n        setTopTrailerSoundOn = _useState2[1];\n\n  const videoSections = props.videoSections;\n\n  const _videoSections$0$vide = _toArray(videoSections[0].videos),\n        firstVideo = _videoSections$0$vide[0],\n        remainingVideos = _videoSections$0$vide.slice(1);\n\n  const imageUrl = firstVideo ? \"https://image.tmdb.org/t/p/original/\".concat(firstVideo.poster_path) : null;\n  const detailModalComponent = buildVideoModal(detailModal, videoInfo, {\n    closeModalHandler\n  });\n  const carousels = videoSections.map((videoSection, index) => /*#__PURE__*/React.createElement(VideoCarousel, {\n    key: videoSection.title,\n    carouselName: videoSection.title,\n    carouselVideo: index === 0 ? remainingVideos : videoSection.videos,\n    carouselClickHandler: cardClickHandler,\n    carouselHoverHandler: cardHoverHandler,\n    videoInfo: videoInfo,\n    videoDetailModal: detailModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n\n  const topTrailerSoundButtonClickHandler = () => setTopTrailerSoundOn(prevState => !prevState);\n\n  return !videoInfoError ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BrowseContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TopTrailerComponent, {\n    image: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TextsAndButtons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"verticalItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \" \", firstVideo ? firstVideo.name || firstVideo.title : null, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \" \", firstVideo ? firstVideo.overview : null, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontalButtonsHolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    backgroundColor: \"#fff\",\n    textColor: \"rgb(24, 24, 24)\",\n    playButton: true,\n    image: true,\n    icon: faPlay,\n    onButtonHover: () => onButtonHoverHandler('playButton'),\n    hoverStatus: buttonHovered['playButton'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(Button, {\n    backgroundColor: \"rgba(133, 133, 133, 0.6)\",\n    textColor: \"white\",\n    playButton: true,\n    image: true,\n    icon: faInfoCircle,\n    onButtonHover: () => onButtonHoverHandler('infoButton'),\n    hoverStatus: buttonHovered['infoButton'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, \"More Info \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"verticalItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CircularSoundButton, {\n    topTrailerSoundButtonClickHandler: topTrailerSoundButtonClickHandler,\n    topTrailerSoundOn: topTrailerSoundOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Carousels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, carousels), detailModalComponent) : /*#__PURE__*/React.createElement(ErrorPage, {\n    errors: videoInfoError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default BrowseContent;","map":{"version":3,"sources":["C:/Users/aftab/Desktop/netflixClone/Netflix-Clone/src/containers/Browse/BrowseContent/BrowseContent.js"],"names":["React","useState","TopTrailerComponent","Button","VideoCarousel","faPlay","faInfoCircle","buildVideoModal","useVideoInfoHandlers","ErrorPage","useHoverStyleButton","CircularSoundButton","BrowseContent","props","videoInfo","videoInfoError","detailModal","cardClickHandler","cardHoverHandler","closeModalHandler","buttonHovered","onButtonHoverHandler","topTrailerSoundOn","setTopTrailerSoundOn","videoSections","videos","firstVideo","remainingVideos","imageUrl","poster_path","detailModalComponent","carousels","map","videoSection","index","title","topTrailerSoundButtonClickHandler","prevState","name","overview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;AAEA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,mCAArC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,oBAAP,MAAiC,4BAAjC;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,mBAAP,MAAgC,uDAAhC;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA,gCAIvBL,oBAAoB,EAJG;AAAA;AAAA,QAEvBM,SAFuB;AAAA,QAEZC,cAFY;AAAA,QAEIC,WAFJ;AAAA,QAEiBC,gBAFjB;AAAA,QAGvBC,gBAHuB;AAAA,QAGLC,iBAHK;;AAAA,+BAMmBT,mBAAmB,CAAC;AAC9D,kBAAc,IADgD;AAE9D,kBAAc;AAFgD,GAAD,CANtC;AAAA;AAAA,QAMpBU,aANoB;AAAA,QAMLC,oBANK;;AAAA,oBAWuBpB,QAAQ,CAAC,IAAD,CAX/B;AAAA;AAAA,QAWpBqB,iBAXoB;AAAA,QAWDC,oBAXC;;AAAA,QAanBC,aAbmB,GAaDX,KAbC,CAanBW,aAbmB;;AAAA,yCAccA,aAAa,CAAC,CAAD,CAAb,CAAiBC,MAd/B;AAAA,QAcpBC,UAdoB;AAAA,QAcLC,eAdK;;AAe3B,QAAMC,QAAQ,GAAGF,UAAU,iDAA0CA,UAAU,CAACG,WAArD,IAAqE,IAAhG;AAEA,QAAMC,oBAAoB,GAAGvB,eAAe,CAACS,WAAD,EAAcF,SAAd,EAAyB;AAAEK,IAAAA;AAAF,GAAzB,CAA5C;AAEA,QAAMY,SAAS,GAAGP,aAAa,CAACQ,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,kBAChC,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAED,YAAY,CAACE,KAAjC;AACI,IAAA,YAAY,EAAEF,YAAY,CAACE,KAD/B;AAEI,IAAA,aAAa,EAAED,KAAK,KAAK,CAAV,GAAcP,eAAd,GAAgCM,YAAY,CAACR,MAFhE;AAGI,IAAA,oBAAoB,EAAER,gBAH1B;AAII,IAAA,oBAAoB,EAAEC,gBAJ1B;AAKI,IAAA,SAAS,EAAEJ,SALf;AAMI,IAAA,gBAAgB,EAAEE,WANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAlB;;AAWA,QAAMoB,iCAAiC,GAAG,MAAMb,oBAAoB,CAACc,SAAS,IAAI,CAACA,SAAf,CAApE;;AAEA,SAAQ,CAACtB,cAAD,gBACJ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEa,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOF,UAAU,GAAIA,UAAU,CAACY,IAAX,IAAmBZ,UAAU,CAACS,KAAlC,GAA2C,IAA5D,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAST,UAAU,GAAGA,UAAU,CAACa,QAAd,GAAyB,IAA5C,MAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,eAAe,EAAC,MAAxB;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,UAAU,MAFd;AAEe,IAAA,KAAK,MAFpB;AAEqB,IAAA,IAAI,EAAElC,MAF3B;AAGI,IAAA,aAAa,EACT,MAAMgB,oBAAoB,CAAC,YAAD,CAJlC;AAKI,IAAA,WAAW,EAAED,aAAa,CAAC,YAAD,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,oBAAC,MAAD;AAAQ,IAAA,eAAe,EAAC,0BAAxB;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,UAAU,MAFd;AAEe,IAAA,KAAK,MAFpB;AAEqB,IAAA,IAAI,EAAEd,YAF3B;AAGI,IAAA,aAAa,EACT,MAAMe,oBAAoB,CAAC,YAAD,CAJlC;AAKI,IAAA,WAAW,EAAED,aAAa,CAAC,YAAD,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,CAHJ,CADJ,eAuBI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,mBAAD;AACI,IAAA,iCAAiC,EAAEgB,iCADvC;AAEI,IAAA,iBAAiB,EAAEd,iBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBJ,CADJ,CADJ,eAgCI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,SADL,CAhCJ,EAmCKD,oBAnCL,CADI,gBAuCJ,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEf,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ;AAyCH,CAzED;;AA2EA,eAAeH,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport './BrowseContent.css'\r\n\r\nimport TopTrailerComponent from 'components/Video/TopTrailerComponent/TopTrailerComponent'\r\nimport Button from 'components/UI/Button/Button'\r\nimport VideoCarousel from 'components/Video/VideoCarousel/VideoCarousel'\r\nimport { faPlay, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { buildVideoModal } from 'utils/transformations'\r\nimport useVideoInfoHandlers from 'hooks/useVideoInfoHandlers'\r\nimport ErrorPage from 'components/StaticPages/ErrorPage/ErrorPage'\r\nimport useHoverStyleButton from 'hooks/useHoverStyleButton'\r\nimport CircularSoundButton from 'components/UI/CircularSoundButton/CircularSoundButton'\r\n\r\nconst BrowseContent = props => {\r\n    const [\r\n        videoInfo, videoInfoError, detailModal, cardClickHandler,\r\n        cardHoverHandler, closeModalHandler\r\n    ] = useVideoInfoHandlers()\r\n\r\n    const [buttonHovered, onButtonHoverHandler] = useHoverStyleButton({\r\n        'playButton': true,\r\n        'infoButton': true\r\n    })\r\n\r\n    const [topTrailerSoundOn, setTopTrailerSoundOn] = useState(true)\r\n\r\n    const { videoSections } = props\r\n    const [firstVideo, ...remainingVideos] = videoSections[0].videos\r\n    const imageUrl = firstVideo ? `https://image.tmdb.org/t/p/original/${firstVideo.poster_path}` : null\r\n\r\n    const detailModalComponent = buildVideoModal(detailModal, videoInfo, { closeModalHandler })\r\n\r\n    const carousels = videoSections.map((videoSection, index) => (\r\n        <VideoCarousel key={videoSection.title}\r\n            carouselName={videoSection.title}\r\n            carouselVideo={index === 0 ? remainingVideos : videoSection.videos}\r\n            carouselClickHandler={cardClickHandler}\r\n            carouselHoverHandler={cardHoverHandler}\r\n            videoInfo={videoInfo}\r\n            videoDetailModal={detailModal}\r\n        />\r\n    ))\r\n\r\n    const topTrailerSoundButtonClickHandler = () => setTopTrailerSoundOn(prevState => !prevState)\r\n\r\n    return (!videoInfoError ? (\r\n        <div className=\"BrowseContent\">\r\n            <TopTrailerComponent image={imageUrl} >\r\n                <div className=\"TextsAndButtons\">\r\n                    <div className=\"verticalItem\" >\r\n                        <h3 > {firstVideo ? (firstVideo.name || firstVideo.title) : null} </h3>\r\n                        <span > {firstVideo ? firstVideo.overview : null} </span>\r\n                        <div className=\"horizontalButtonsHolder\">\r\n                            <Button backgroundColor=\"#fff\"\r\n                                textColor=\"rgb(24, 24, 24)\"\r\n                                playButton image icon={faPlay}\r\n                                onButtonHover={\r\n                                    () => onButtonHoverHandler('playButton')}\r\n                                hoverStatus={buttonHovered['playButton']} >\r\n                                Play\r\n                            </Button>\r\n\r\n                            <Button backgroundColor=\"rgba(133, 133, 133, 0.6)\"\r\n                                textColor=\"white\"\r\n                                playButton image icon={faInfoCircle}\r\n                                onButtonHover={\r\n                                    () => onButtonHoverHandler('infoButton')}\r\n                                hoverStatus={buttonHovered['infoButton']} >\r\n                                More Info </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"verticalItem\" >\r\n                        <CircularSoundButton\r\n                            topTrailerSoundButtonClickHandler={topTrailerSoundButtonClickHandler}\r\n                            topTrailerSoundOn={topTrailerSoundOn} />\r\n                    </div>\r\n                </div>\r\n            </TopTrailerComponent>\r\n            <div className=\"Carousels\">\r\n                {carousels}\r\n            </div>\r\n            {detailModalComponent}\r\n\r\n        </div>) :\r\n        <ErrorPage errors={videoInfoError} />\r\n    )\r\n}\r\n\r\nexport default BrowseContent"]},"metadata":{},"sourceType":"module"}