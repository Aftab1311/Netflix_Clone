{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\src\\\\containers\\\\Browse\\\\routes\\\\Home.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BrowseContent from '../BrowseContent/BrowseContent';\nimport ErrorPage from 'components/StaticPages/ErrorPage/ErrorPage';\nimport { fetchTrending, selectAllTrendingVideos, selectTrendingError } from 'store/reducers/slices/trendingSlice';\nimport { fetchTopRated, selectAllTopRatedVideos, selectTopRatedError } from 'store/reducers/slices/topratedSlice';\nimport { fetchNetflixOriginals, selectAllNetflixOriginals, selectNetflixError } from 'store/reducers/slices/netflixOriginalsSlice';\n\nconst Home = () => {\n  const trendingVideos = useSelector(selectAllTrendingVideos);\n  const topRatedVideos = useSelector(selectAllTopRatedVideos);\n  const netflixOriginals = useSelector(selectAllNetflixOriginals);\n  const trendingError = useSelector(selectTrendingError);\n  const topRatedError = useSelector(selectTopRatedError);\n  const netflixError = useSelector(selectNetflixError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTrending());\n    dispatch(fetchTopRated());\n    dispatch(fetchNetflixOriginals());\n  }, [dispatch]);\n  let videoSections = [];\n  let component;\n\n  if (!trendingError && !topRatedError && !netflixError) {\n    videoSections.push({\n      title: \"Trending\",\n      videos: trendingVideos\n    });\n    videoSections.push({\n      title: \"Top Rated\",\n      videos: topRatedVideos\n    });\n    videoSections.push({\n      title: \"Netflix Originals\",\n      videos: netflixOriginals\n    });\n    component = /*#__PURE__*/React.createElement(BrowseContent, {\n      videoSections: videoSections,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    });\n  } else {\n    component = /*#__PURE__*/React.createElement(ErrorPage, {\n      errors: [trendingError, topRatedError, netflixError],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return component;\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/aftab/Desktop/netflixClone/Netflix-Clone/src/containers/Browse/routes/Home.js"],"names":["React","useEffect","useSelector","useDispatch","BrowseContent","ErrorPage","fetchTrending","selectAllTrendingVideos","selectTrendingError","fetchTopRated","selectAllTopRatedVideos","selectTopRatedError","fetchNetflixOriginals","selectAllNetflixOriginals","selectNetflixError","Home","trendingVideos","topRatedVideos","netflixOriginals","trendingError","topRatedError","netflixError","dispatch","videoSections","component","push","title","videos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,SAASC,aAAT,EAAwBC,uBAAxB,EAAiDC,mBAAjD,QAA4E,qCAA5E;AACA,SAASC,aAAT,EAAwBC,uBAAxB,EAAiDC,mBAAjD,QAA4E,qCAA5E;AACA,SAASC,qBAAT,EAAgCC,yBAAhC,EAA2DC,kBAA3D,QAAqF,6CAArF;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,cAAc,GAAGd,WAAW,CAACK,uBAAD,CAAlC;AACA,QAAMU,cAAc,GAAGf,WAAW,CAACQ,uBAAD,CAAlC;AACA,QAAMQ,gBAAgB,GAAGhB,WAAW,CAACW,yBAAD,CAApC;AAEA,QAAMM,aAAa,GAAGjB,WAAW,CAACM,mBAAD,CAAjC;AACA,QAAMY,aAAa,GAAGlB,WAAW,CAACS,mBAAD,CAAjC;AACA,QAAMU,YAAY,GAAGnB,WAAW,CAACY,kBAAD,CAAhC;AACA,QAAMQ,QAAQ,GAAGnB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,QAAQ,CAAChB,aAAa,EAAd,CAAR;AACAgB,IAAAA,QAAQ,CAACb,aAAa,EAAd,CAAR;AACAa,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AACH,GAJQ,EAIN,CAACU,QAAD,CAJM,CAAT;AAOA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,SAAJ;;AACA,MAAI,CAACL,aAAD,IAAkB,CAACC,aAAnB,IAAoC,CAACC,YAAzC,EAAuD;AACnDE,IAAAA,aAAa,CAACE,IAAd,CAAmB;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,MAAM,EAAEX;AAA7B,KAAnB;AACAO,IAAAA,aAAa,CAACE,IAAd,CAAmB;AAAEC,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,MAAM,EAAEV;AAA9B,KAAnB;AACAM,IAAAA,aAAa,CAACE,IAAd,CAAmB;AAAEC,MAAAA,KAAK,EAAE,mBAAT;AAA8BC,MAAAA,MAAM,EAAET;AAAtC,KAAnB;AACAM,IAAAA,SAAS,gBAAG,oBAAC,aAAD;AAAe,MAAA,aAAa,EAAED,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;AACH,GALD,MAKO;AACHC,IAAAA,SAAS,gBACL,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,CAACL,aAAD,EAAgBC,aAAhB,EAA+BC,YAA/B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,SAAOG,SAAP;AACH,CA/BD;;AAiCA,eAAeT,IAAf","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport BrowseContent from '../BrowseContent/BrowseContent'\r\nimport ErrorPage from 'components/StaticPages/ErrorPage/ErrorPage'\r\nimport { fetchTrending, selectAllTrendingVideos, selectTrendingError } from 'store/reducers/slices/trendingSlice'\r\nimport { fetchTopRated, selectAllTopRatedVideos, selectTopRatedError } from 'store/reducers/slices/topratedSlice'\r\nimport { fetchNetflixOriginals, selectAllNetflixOriginals, selectNetflixError } from 'store/reducers/slices/netflixOriginalsSlice'\r\n\r\nconst Home = () => {\r\n    const trendingVideos = useSelector(selectAllTrendingVideos)\r\n    const topRatedVideos = useSelector(selectAllTopRatedVideos)\r\n    const netflixOriginals = useSelector(selectAllNetflixOriginals)\r\n\r\n    const trendingError = useSelector(selectTrendingError)\r\n    const topRatedError = useSelector(selectTopRatedError)\r\n    const netflixError = useSelector(selectNetflixError)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTrending())\r\n        dispatch(fetchTopRated())\r\n        dispatch(fetchNetflixOriginals())\r\n    }, [dispatch])\r\n\r\n\r\n    let videoSections = []\r\n    let component \r\n    if (!trendingError && !topRatedError && !netflixError) {\r\n        videoSections.push({ title: \"Trending\", videos: trendingVideos })\r\n        videoSections.push({ title: \"Top Rated\", videos: topRatedVideos })\r\n        videoSections.push({ title: \"Netflix Originals\", videos: netflixOriginals })\r\n        component = <BrowseContent videoSections={videoSections} />\r\n    } else {\r\n        component = (\r\n            <ErrorPage errors={[trendingError, topRatedError, netflixError]} />\r\n        )\r\n    }\r\n\r\n    return component\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}