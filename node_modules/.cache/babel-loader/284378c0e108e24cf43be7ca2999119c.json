{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aftab\\\\Desktop\\\\netflixClone\\\\Netflix-Clone\\\\src\\\\hooks\\\\useDropdown.js\";\nimport React, { useState } from 'react';\nimport Dropdown from 'components/Navigation/Dropdown/Dropdown';\n\nconst UseDropDown = (content, boxSizing) => {\n  const _useState = useState({\n    iconHovered: false,\n    floatingBoxHovered: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropdown = _useState2[0],\n        setDropdown = _useState2[1];\n\n  const handlers = {\n    iconHoveredInHandler: () => {\n      setDropdown(prevDropdown => _objectSpread(_objectSpread({}, prevDropdown), {}, {\n        iconHovered: true\n      }));\n    },\n    iconHoveredOutHandler: () => {\n      setTimeout(() => {\n        setDropdown(prevDropdown => _objectSpread(_objectSpread({}, prevDropdown), {}, {\n          iconHovered: false\n        }));\n      }, 600);\n    },\n    floatingBoxHoveredInHandler: () => {\n      setDropdown(prevDropdown => _objectSpread(_objectSpread({}, prevDropdown), {}, {\n        floatingBoxHovered: true\n      }));\n    },\n    floatingBoxHoveredOutHandler: () => {\n      setDropdown(prevDropdown => _objectSpread(_objectSpread({}, prevDropdown), {}, {\n        floatingBoxHovered: false\n      }));\n    },\n    onItemClickCloseBoxHandler: () => {\n      setDropdown(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Dropdown, Object.assign({\n    dropdown: dropdown,\n    content: content\n  }, handlers, {\n    boxSizing: boxSizing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default UseDropDown;","map":{"version":3,"sources":["C:/Users/aftab/Desktop/netflixClone/Netflix-Clone/src/hooks/useDropdown.js"],"names":["React","useState","Dropdown","UseDropDown","content","boxSizing","iconHovered","floatingBoxHovered","dropdown","setDropdown","handlers","iconHoveredInHandler","prevDropdown","iconHoveredOutHandler","setTimeout","floatingBoxHoveredInHandler","floatingBoxHoveredOutHandler","onItemClickCloseBoxHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,yCAArB;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAwB;AAAA,oBACRJ,QAAQ,CAAC;AACrCK,IAAAA,WAAW,EAAE,KADwB;AAErCC,IAAAA,kBAAkB,EAAE;AAFiB,GAAD,CADA;AAAA;AAAA,QACjCC,QADiC;AAAA,QACvBC,WADuB;;AAMxC,QAAMC,QAAQ,GAAG;AACbC,IAAAA,oBAAoB,EAAE,MAAM;AACxBF,MAAAA,WAAW,CAACG,YAAY,oCACjBA,YADiB;AAEpBN,QAAAA,WAAW,EAAE;AAFO,QAAb,CAAX;AAIH,KANY;AAQbO,IAAAA,qBAAqB,EAAE,MAAM;AACzBC,MAAAA,UAAU,CAAC,MAAM;AACbL,QAAAA,WAAW,CAACG,YAAY,oCACjBA,YADiB;AAEpBN,UAAAA,WAAW,EAAE;AAFO,UAAb,CAAX;AAIH,OALS,EAKP,GALO,CAAV;AAMH,KAfY;AAiBbS,IAAAA,2BAA2B,EAAE,MAAM;AAC/BN,MAAAA,WAAW,CAACG,YAAY,oCACjBA,YADiB;AAEpBL,QAAAA,kBAAkB,EAAE;AAFA,QAAb,CAAX;AAIH,KAtBY;AAwBbS,IAAAA,4BAA4B,EAAE,MAAM;AAChCP,MAAAA,WAAW,CAACG,YAAY,oCACjBA,YADiB;AAEpBL,QAAAA,kBAAkB,EAAE;AAFA,QAAb,CAAX;AAIH,KA7BY;AA+BbU,IAAAA,0BAA0B,EAAE,MAAM;AAC9BR,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AAjCY,GAAjB;AAoCA,sBACI,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAED,QADd;AACwB,IAAA,OAAO,EAAEJ;AADjC,KAEQM,QAFR;AAEkB,IAAA,SAAS,EAAEL,SAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CAhDD;;AAkDA,eAAeF,WAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Dropdown from 'components/Navigation/Dropdown/Dropdown'\r\n\r\nconst UseDropDown = (content, boxSizing) => {\r\n    const [dropdown, setDropdown] = useState({\r\n        iconHovered: false,\r\n        floatingBoxHovered: false\r\n    })\r\n\r\n    const handlers = {\r\n        iconHoveredInHandler: () => {\r\n            setDropdown(prevDropdown => ({\r\n                ...prevDropdown,\r\n                iconHovered: true,\r\n            }))\r\n        },\r\n\r\n        iconHoveredOutHandler: () => {\r\n            setTimeout(() => {\r\n                setDropdown(prevDropdown => ({\r\n                    ...prevDropdown,\r\n                    iconHovered: false,\r\n                }))\r\n            }, 600)\r\n        },\r\n\r\n        floatingBoxHoveredInHandler: () => {\r\n            setDropdown(prevDropdown => ({\r\n                ...prevDropdown,\r\n                floatingBoxHovered: true,\r\n            }))\r\n        },\r\n\r\n        floatingBoxHoveredOutHandler: () => {\r\n            setDropdown(prevDropdown => ({\r\n                ...prevDropdown,\r\n                floatingBoxHovered: false,\r\n            }))\r\n        },\r\n\r\n        onItemClickCloseBoxHandler: () => {\r\n            setDropdown(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dropdown\r\n            dropdown={dropdown} content={content}\r\n            {...handlers} boxSizing={boxSizing}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UseDropDown"]},"metadata":{},"sourceType":"module"}